name: Full CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-frontend:
    name: Build & Test Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Clean and install dependencies
        run: |
          rm -rf node_modules
          npm install --force
        working-directory: ./simple-todo-frontend
      - name: Run React build
        run: npm run build
        working-directory: ./simple-todo-frontend
      - name: Run tests with coverage
        run: npm test -- --coverage --watchAll=false
        working-directory: ./simple-todo-frontend
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: react-coverage-report
          path: simple-todo-frontend/coverage
    env:
      CI: false

  run-rest-assured-tests:
    name: Run REST Assured Tests
    runs-on: ubuntu-latest
    needs: build-frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      # === NEW STEP 1: Build the backend API so it can be run ===
      # This assumes your backend API code is in a directory like 'simple-todo-api'.
      # You MUST update 'simple-todo-api' to the correct directory name.
      - name: Build the backend API
        working-directory: ./simple-todo-api # <-- IMPORTANT: Change this to your API's directory
        run: mvn -B package # '-B' is for non-interactive mode

      # === NEW STEP 2: Start the backend server in the background ===
      # The '&' at the end is crucial. It runs the server as a background process.
      - name: Start backend API server
        run: |
          # IMPORTANT: You MUST change the path and .jar filename to match your project.
          java -jar ./simple-todo-api/target/your-api-artifact-id-0.0.1-SNAPSHOT.jar &

      # === NEW STEP 3: Wait for the server to be ready before testing ===
      # This step prevents tests from running before the application has fully started.
      - name: Wait for backend to start
        run: |
          echo "Waiting for backend to launch on port 8080..."
          # This command waits until port 8080 is open.
          # Change 8080 if your API uses a different port.
          timeout 60s bash -c 'until curl -s http://localhost:8080/actuator/health > /dev/null; do sleep 1; done'
          echo "Backend is up and running!"

      # === YOUR ORIGINAL TEST STEP (now runs after server is up) ===
      - name: Run REST Assured Tests with Coverage
        working-directory: ./simple-todo-api-tests
        run: mvn clean test jacoco:report

      - name: Upload Code Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: simple-todo-api-tests/target/site/jacoco/index.html

      - name: Upload Allure Results
        uses: actions/upload-artifact@v4
        if: always() # Upload results even if tests fail
        with:
          name: allure-results
          path: simple-todo-api-tests/target/allure-results