name: Full CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-frontend:
    name: Build & Test Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Frontend Dependencies and Fix Permissions
        working-directory: ./simple-todo-frontend
        run: |
          npm ci
          chmod +x ./node_modules/.bin/react-scripts

      - name: Run React Build
        working-directory: ./simple-todo-frontend
        run: npm run build

      - name: Run Frontend Tests
        working-directory: ./simple-todo-frontend
        run: npm test -- --coverage --watchAll=false

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: react-coverage-report
          path: simple-todo-frontend/coverage
    env:
      CI: false

  run-backend-tests:
    name: Build, Start, and Test Backend API
    runs-on: ubuntu-latest
    needs: build-frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up both Java (for the tests) and Node.js (for the server)
      - name: Set up Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # === STEP 1: Install dependencies for the Node.js backend ===
      - name: Install Backend Node.js Dependencies
        working-directory: ./simple-todo-backend
        run: npm install

      # === STEP 2: Start the Node.js backend server ===
      # We run 'node index.js' directly. The '&' runs it in the background.
      - name: Start backend API server (Node.js)
        working-directory: ./simple-todo-backend
        run: node index.js &

      # === STEP 3: Wait for the server to be ready on port 4000 ===
      # This waits until the server is accepting connections on port 4000.
      - name: Wait for backend to start
        run: |
          echo "Waiting for backend Node.js server to launch on port 4000..."
          timeout 60s bash -c 'while !</dev/tcp/localhost/4000; do sleep 1; done'
          echo "Backend is up and running!"

      # === STEP 4: Run the REST Assured tests (Java/Maven) ===
      # This command correctly targets the separate test project folder.
      - name: Run REST Assured Integration Tests
        working-directory: ./simple-todo-api-tests
        run: mvn verify

      # === STEP 5: Upload artifacts ===
      - name: Upload Backend Code Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: ./simple-todo-api-tests/target/site/jacoco/index.html

      - name: Upload Allure Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-results
          path: ./simple-todo-api-tests/target/allure-results